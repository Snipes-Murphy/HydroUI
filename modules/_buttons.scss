// Default Buttons

@each $class, $value in $colors-map {
  .btn {
    &-#{$class}.btn-outline {
      @include font-heading;
      @include mx-btn($value);
      background-color: transparent;
      color: $value;
      border-color: $value;
      border-width: 1px;


      @if ifMap($ultra-bright-colors, $class) {
        &:disabled {
          color: $grey-8;
          background-color: lighten($value, $color-set-hover-intensity);
          border-color: lighten($value, $color-set-hover-intensity);
        }
        &:hover {
          color: $grey-8;
          background-color: darken($value, $color-set-hover-intensity);
          border-color: darken($value, $color-set-hover-intensity);
        }
        &:active {
          background-color: darken($value, $color-set-click-intensity);
          border-color: darken($value, $color-set-hover-intensity);
          color: $grey-8;
        }
        &:focus {
          box-shadow: 0 0 0 3px rgba($value, 0.5);
        }
      } @else if ifMap($bright-colors, $class) {
        &:disabled {
          color: $grey-8;
          background-color: lighten($value, $color-set-hover-intensity);
          border-color: lighten($value, $color-set-hover-intensity);
        }
        &:hover {
          color: $grey-8;
          background-color: darken($value, $color-set-hover-intensity);
          border-color: darken($value, $color-set-hover-intensity);
        }
        &:active {
          background-color: darken($value, $color-set-click-intensity);
          border-color: darken($value, $color-set-hover-intensity);
          color: $grey-8;
        }
        &:focus {
          box-shadow: 0 0 0 3px rgba($value, 0.5);
        }
      } @else {
        &:disabled {
          color: white;
          background-color: lighten($value, $color-set-hover-intensity);
          border-color: lighten($value, $color-set-hover-intensity);
        }
        &:hover {
          color: white;
          background-color: darken($value, $color-set-hover-intensity);
          border-color: darken($value, $color-set-hover-intensity);
        }
        &:active {
          background-color: darken($value, $color-set-click-intensity);
          border-color: darken($value, $color-set-hover-intensity);
          color: white;
        }
        &:focus {
          box-shadow: 0 0 0 3px rgba($value, 0.5);
        }
      }
    }

    &-#{$class}.btn-link {
      @include font-heading;
      @include mx-btn($value);
      background-color: transparent;
      color: $value;
      border-color: transparent;
      &:disabled {
        background-color: transparent;
        color: lighten($value, $color-set-hover-intensity);
      }
      &:hover {
        background-color: transparent;
        color: darken($value, $color-set-hover-intensity);
      }
      &:active {
        background-color: transparent;
        color: darken($value, $color-set-click-intensity);
      }
      &:focus {
        background-color: transparent;
        box-shadow: 0 0 0 0px rgba($value, 0.5);
      }
    }

    &-#{$class} {
      @include font-heading;
      @include mx-btn($value);
      background-color: $value;
      &:disabled {
        background-color: lighten($value, $color-set-hover-intensity);
      }
      &:hover {
        background-color: darken($value, $color-set-hover-intensity);
      }
      &:active {
        background-color: darken($value, $color-set-click-intensity);
      }
      &:focus {
        box-shadow: 0 0 0 3px rgba($value, 0.5);
      }

      &.btn-text {
        background-color: $white;
        border: $white;
        color: $value;
        font-weight: 500;
        transition: 200ms;
        @include shadow-small;

        &:disabled {
          background-color: $grey-3;
        }

        &:hover, &:active {
          transform: translateY(-3px);
          @include shadow-medium-float;
        }

        &:focus {
          @include shadow-medium-float;
        }
      }

      &.btn-tone {
        background-color: $value;
        border: $value;
        color: $white;
        font-weight: 500;
        transition: 200ms;
        @include shadow-small;

        &:disabled {
          background-color: lighten($value, 10%);
        }

        &:hover, &:active {
          transform: translateY(-3px);
          @include shadow-medium-float;
        }

        &:focus {
          @include shadow-medium-float;
        }
      }

      @if ifMap($bright-colors, $class) {
        &.btn-soft {
          background-color: lighten($value, 30%);
          border: lighten($value, 40%);
          color: darken($value, 10%);

          &:disabled {
            color: white;
            background-color: lighten($value, $color-set-hover-intensity);
            border-color: lighten($value, $color-set-hover-intensity);
          }
          &:hover {
            color: white;
            background-color: darken($value, $color-set-hover-intensity);
            border-color: darken($value, $color-set-hover-intensity);
          }
          &:active {
            background-color: darken($value, $color-set-click-intensity);
            border-color: darken($value, $color-set-hover-intensity);
            color: white;
          }
          &:focus {
            box-shadow: 0 0 0 3px rgba($value, 0.5);
          }
        }
      } @else if ifMap($ultra-bright-colors, $class) {
        &.btn-soft {
          @if $class == 'neutral' {
            background-color: lighten($value, 1%);
          } @else {
            background-color: lighten($value, 9%);
          }
          border: none;
          color: darken($value, 10%);

          &:disabled {
            color: white;
            background-color: lighten($value, $color-set-hover-intensity);
            border-color: lighten($value, $color-set-hover-intensity);
          }
          &:hover {
            color: white;
            background-color: darken($value, $color-set-hover-intensity);
            border-color: darken($value, $color-set-hover-intensity);
          }
          &:active {
            background-color: darken($value, $color-set-click-intensity);
            border-color: darken($value, $color-set-hover-intensity);
            color: white;
          }
          &:focus {
            box-shadow: 0 0 0 3px rgba($value, 0.5);
          }
        }
      } @else {
        &.btn-soft {
          background-color: lighten($value, 40%);
          border: lighten($value, 10%);
          color: darken($value, 10%);

          &:disabled {
            color: white;
            background-color: lighten($value, $color-set-hover-intensity);
            border-color: lighten($value, $color-set-hover-intensity);
          }
          &:hover {
            color: white;
            background-color: darken($value, $color-set-hover-intensity);
            border-color: darken($value, $color-set-hover-intensity);
          }
          &:active {
            background-color: darken($value, $color-set-click-intensity);
            border-color: darken($value, $color-set-hover-intensity);
            color: white;
          }
          &:focus {
            box-shadow: 0 0 0 3px rgba($value, 0.5);
          }
        }
      }
    }

  }

  // Color Invert check
  @if index($color-text-invert, $class) {
    .btn-#{$class}, .btn-outline-#{$class}:hover {
      color: black;
    }
  }

  .link-#{$class} {
    @include btn-reset;
    padding: 0;
    font-size: 14px;
    color: $value;
  }
}

.btn-selector {
  position: relative;
  margin: 4px 5px;
  padding: 10px;
  display: block;
  @include btn-reset;
  text-align: left;
  border-radius: 8px;
  height: 125px;
  background: linear-gradient(45deg, #1862cf, #709dff) !important;
  @include disable-drag;

  & h1 {
    margin: 0;
    text-transform: uppercase;
    color: white;
    line-height: 1em;
    font-size: 24px;
  }

  & h2 {
    margin: 0;
    font-weight: 500;
    text-transform: capitalize;
    line-height: 1em;
    color: $grey-1;
    font-size: 16px;
  }

  & .icon {
    position: absolute;
    bottom: 0;
    left: 0;
    padding: 4px;
    flex-basis: 100%;
    width: 100%;
    text-align: right;
    @include disable-drag;

    & img {
      width: 96px;
      height: 96px;
      @include disable-drag;
    }

    &.float {
      transform: translateY(34px);
    }
  }
}

.btn-list {
  @include btn-reset;
  transition: 200ms;
  display: block;
  cursor: pointer;
  text-align: left;
  width: 100%;
  padding: 6px 12px;
  color: $grey-6;
  font-size: 14px;

  &:hover {
    color: $grey-8;
    padding: 6px 0 6px 20px;
  }
}

.btn-bar-group {
  display: flex;
  z-index: 10;
  padding: 4px 0;
  button {
    position: relative;
    margin: 0 !important;
    border-radius: 0 !important;
    z-index: 1;

    &:hover, &:active, &:focus {
      z-index: 2;
    }
  }
  button:first-child, a:first-child {
    border-radius: $btn-border-radius 0 0 $btn-border-radius !important;
  }
  button:last-child, a:last-child {
    border-radius: 0 $btn-border-radius $btn-border-radius 0 !important;
  }
  .btn-round:first-child {
    border-radius: 100px 0 0 100px !important;
  }
  .btn-round:last-child {
    border-radius: 0 100px 100px 0 !important;
  }
  .btn-square:first-child {
    border-radius: 0 0 0 0 !important;
  }
  .btn-square:last-child {
    border-radius: 0 0 0 0 !important;
  }
}

.btn-no-highlight, .no-highlight {
  @include shadow-none;
  &:focus {
    @include shadow-none;
  }
}

// Button Variations

.btn-square {
  @include box-none-border;
}

.btn-round {
  @include box-full-border;
}

// Button sizes

.btn-sm {
  padding: 5px 14px;
  font-size: 13px;
}

.btn-lg {
  padding: 15px 24px;
  font-size: 19px;
}

.btn-wide {
  min-width: 10em;
}

// Button Effects

.btn-float {
  transition: 200ms;
  &:hover, &:active, &:focus {
    transform: translateY(-3px);
    @include shadow-small-float;
  }
}

.btn-scale {
  transition: 300ms $ease-glide;
  &:hover {
    transform: scale(1.05);
  }
  &:active, &:focus {
    transform: scale(0.95)
  }
}

.btn-hoverglow {
  overflow: hidden;

  .btn-glow-object {
    transition: opacity 200ms;
    display: block;
    height: autoCalc(100vh * 2);
    width: autoCalc(100vw * 2);
    position: absolute;
    opacity: 0;
    background-color: red;
    background: radial-gradient(rgba($white, 0.3), rgba(255,255,255,0.1) 96px);
  }

  &.hover {
    .btn-glow-object {
      opacity: 1;
    }
  }
}

// Button Specials

.btn-app {
  display: inline-block;
  min-height: 4em;

  .btn-content {
    width: 14em;
    text-align: left;
    display: flex;
    align-items: center;

    .icon {
      flex-basis: 32px;
      width: 32px;
      margin-right: 20px;
    }
    .sub-heading {
      display: block;
      font-size: 12px;
    }
    .heading {
      line-height: 1.2em;
      display: block;
      @include font-weight-bold;
      font-size: 18px;
    }
  }
}

.btn-reset {
  @include btn-reset;
}
